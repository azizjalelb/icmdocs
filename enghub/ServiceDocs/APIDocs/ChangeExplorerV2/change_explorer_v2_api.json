{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0.0",
        "title": "ChangeExplorer V2 APIs",
        "description": "Component wise breakdown of all ChangeExplorerV2 APIs. For more details, visit [FCM Service Docs](https://eng.ms/docs/cloud-ai-platform/azure-core/one-fleet-platform/one-fleet-platform-timmall/federated-change-management/fcm-engineering-hub/servicedocs/teamdocs/about)."
    },
    "servers": [
        {
            "url": "https://{environment}.fcm.com/",
            "description": "URL",
            "variables": {
                "environment": {
                    "default": "api.dev",
                    "enum": [
                        "api",
                        "api.dev",
                        "api.stg"
                    ]
                }
            }
        },
        {
            "url": "https://{region}.api.azure.com/",
            "variables": {
                "region": {
                    "default": "us-west-2",
                    "enum": [
                        "us-west-2",
                        "us-east-2"
                    ]
                }
            }
        }
    ],
    "paths": {
        "/v1/services/change_count": {
            "post": {
                "summary": "Count of Top-Most Parent Changes for a Service",
                "description": "This endpoint returns the distinct count of the top-most parent changes for a list of services.",
                "operationId": "getServiceChangeCounts",
                "deprecated": false,
                "tags": [
                    "Change Search Service"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GetChangeCount_RequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The counts of the top-most parent changes for a respective service.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetChangeCount_ResponseBody"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/services/changetype_count": {
            "post": {
                "summary": "Count of Top-Most Parent Changes by ChangeType",
                "description": "This endpoint returns the distinct count of the top-most parent changes by ChangeType",
                "operationId": "getChangeTypeCounts",
                "deprecated": false,
                "tags": [
                    "Change Search Service"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GetChangeCount_RequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The counts of the top-most parent changes by ChangeType",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetChangeTypeCount_ResponseBody"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/services/changesource_count": {
            "post": {
                "summary": "Count of Top-Most Parent Changes by ChangeSource",
                "description": "This endpoint returns the distinct count of the top-most parent changes by ChangeSource",
                "operationId": "getChangeCounts",
                "deprecated": false,
                "tags": [
                    "Change Search Service"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GetChangeCount_RequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The counts of the top-most parent changes by ChangeType",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetChangeSourceCount_ResponseBody"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/service/{id}/grouped_changes": {
            "post": {
                "summary": "Top-Most Parent Changes of a Service",
                "description": "Returns a list of the ranked top-most parent changes and their details for a given service in a list.",
                "deprecated": false,
                "tags": [
                    "Change Search Service"
                ],
                "operationId": "getServiceChangesById",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Unique identifier for the service.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GetChangeCountDetails_RequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "List of distinct counts of grouped changes for a given serviceId; not ranked or ordered.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetChangeCountDetails_ResponseBody"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/changes/{id}": {
            "post": {
                "summary": "Details of a Change with Contraints",
                "description": "Retrieves the details of a given changeId and its children adhering to contraints in the `requestBody`.",
                "deprecated": false,
                "tags": [
                    "Change Search Service"
                ],
                "operationId": "getChangeByIdWithFilters",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Unique identifier for the change.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GetChanges_RequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Details of a given changeId and the details of its children.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetChanges_ResponseBody"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Details of a Change",
                "description": "Retrieves the details of a given changeId and the results of its children.",
                "deprecated": false,
                "tags": [
                    "Change Search Service"
                ],
                "operationId": "getChangeById",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Unique identifier for the change.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of a given changeId and the details of its children.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetChanges_ResponseBody"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/service/search": {
            "get": {
                "summary": "Get the List of Services based on keyword",
                "deprecated": false,
                "tags": [
                    "Service Information Provider"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "keyword",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "Keyword to search service(s)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A JSON array of service details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "description": "list of services",
                                    "items": {
                                        "$ref": "#/components/schemas/service"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource/Results not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoContentResult"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/service/{id}": {
            "get": {
                "summary": "Get the Service and its Dependencies",
                "deprecated": false,
                "tags": [
                    "Service Information Provider"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "Service ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service and its dependencies",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/serviceDetails"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource/Results not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoContentResult"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/incident/{id}": {
            "get": {
                "summary": "Parametrizes CSS filters based on IncidentId.",
                "description": "This endpoint returns parametrized fields for a given ICM IncidentId.",
                "deprecated": false,
                "operationId": "getParametersByIncidentId",
                "tags": [
                    "Incident Information Provider"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "incidentId",
                        "description": "Unique identifier for the ICM Incident.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of distinct parameters that can be used to search for changes (i.e. fed into CSS APIs).",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetParametersByIncidentId_ResponseBody"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No content.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoContentResult"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/services/search": {
            "get": {
                "summary": "Get the List of Services based on keyword",
                "parameters": [
                    {
                        "name": "keyword",
                        "in": "query",
                        "description": "Keyword to search service(s)",
                        "required": true,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "UI Backend Service"
                ],
                "responses": {
                    "200": {
                        "description": "Services Search Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Results not found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/locations/search": {
            "get": {
                "summary": "Get the List of Locations based on keyword",
                "parameters": [
                    {
                        "name": "keyword",
                        "in": "query",
                        "description": "Keyword to search location(s)",
                        "required": true,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "UI Backend Service"
                ],
                "responses": {
                    "200": {
                        "description": "Locations Search Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Results not found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/services/{id}": {
            "get": {
                "summary": "Get the Service and its Dependencies based on id (Service ID)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Service ID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "UI Backend Service",
                    "Location Information Provider"
                ],
                "responses": {
                    "200": {
                        "description": "Service and its dependencies",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceDetailsModel"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Results not found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/locations/{id}": {
            "get": {
                "summary": "Get the Location details based on id (Location ID))",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Location ID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "UI Backend Service",
                    "Location Information Provider"
                ],
                "responses": {
                    "200": {
                        "description": "Location Details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LocationDetailsModel"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Results not found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/change/count": {
            "post": {
                "summary": "Count of Changes based on Type, Source, etc",
                "description": "This endpoint returns the distinct count of changes based on projection type - type, source",
                "operationId": "getChangeCounts",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GetChangeCount_ByProjection_RequestBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "UI Backend Service"
                ],
                "responses": {
                    "200": {
                        "description": "The counts of the top-most parent changes by type, source, etc.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetChangeCount_ByProjection_ResponseBody"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Results not found"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1/service/change_count": {
            "post": {
                "summary": "Count of Top-Most Parent Changes for a Service",
                "description": "This endpoint returns the distinct count of the top-most parent changes for a list of services.",
                "operationId": "getServiceChangeCounts",
                "deprecated": false,
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GetChangeCount_RequestBody"
                            }
                        }
                    }
                },
                "tags": [
                    "UI Backend Service"
                ],
                "responses": {
                    "200": {
                        "description": "The counts of the top-most parent changes for a respective service.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetChangeCount_ResponseBody"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/service/{id}/grouped_changes": {
            "post": {
                "summary": "Top-Most Parent Changes of a Service",
                "description": "Returns a list of the ranked top-most parent changes and their details for a given service in a list.",
                "deprecated": false,
                "operationId": "getServiceChangesById",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Unique identifier for the service.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "UI Backend Service"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GetChangeCountDetails_RequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "List of distinct counts of grouped changes for a given serviceId; not ranked or ordered.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetChangeCountDetails_ResponseBody"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/changes/{id}": {
            "post": {
                "summary": "Details of a Change with Contraints",
                "description": "Retrieves the details of a given changeId and its children adhering to contraints in the `requestBody`.",
                "deprecated": false,
                "operationId": "getChangeByIdWithFilters",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Unique identifier for the change.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "UI Backend Service"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GetChanges_RequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Details of a given changeId and the details of its children.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetChanges_ResponseBody"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Details of a Change",
                "description": "Retrieves the details of a given changeId and the results of its children.",
                "deprecated": false,
                "operationId": "getChangeById",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Unique identifier for the change.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "UI Backend Service"
                ],
                "responses": {
                    "200": {
                        "description": "Details of a given changeId and the details of its children.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetChanges_ResponseBody"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ServiceDetailsModel": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DetailsModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "children": {
                                "type": "array",
                                "description": "Component Details",
                                "items": {
                                    "$ref": "#/components/schemas/ServiceDetailsModel"
                                }
                            },
                            "dependencies": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ServiceDetailsModel"
                                }
                            }
                        }
                    }
                ]
            },
            "LocationDetailsModel": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DetailsModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "children": {
                                "type": "array",
                                "description": "Component Details",
                                "items": {
                                    "$ref": "#/components/schemas/LocationDetailsModel"
                                }
                            },
                            "lensExplorerLink": {
                                "type": "string",
                                "example": "https://lensexplorer.com"
                            }
                        }
                    }
                ]
            },
            "DetailsModel": {
                "required": [
                    "id",
                    "name",
                    "type",
                    "subType"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "12345"
                    },
                    "name": {
                        "type": "string",
                        "example": "name"
                    },
                    "type": {
                        "$ref": "#/components/schemas/SearchResultItemType"
                    },
                    "subType": {
                        "$ref": "#/components/schemas/SearchResultItemSubtype"
                    },
                    "numChanges": {
                        "type": "number",
                        "example": 50
                    },
                    "parentId": {
                        "type": "string",
                        "example": "12345"
                    }
                }
            },
            "SearchResponse": {
                "required": [
                    "searchType",
                    "searchResults"
                ],
                "type": "object",
                "properties": {
                    "searchType": {
                        "type": "string",
                        "example": "service"
                    },
                    "searchResults": {
                        "type": "array",
                        "description": "list of results",
                        "items": {
                            "$ref": "#/components/schemas/searchResult"
                        }
                    }
                }
            },
            "searchResult": {
                "required": [
                    "groupName",
                    "groupType",
                    "results"
                ],
                "type": "object",
                "properties": {
                    "groupName": {
                        "$ref": "#/components/schemas/SearchResultItemSubtype"
                    },
                    "groupType": {
                        "$ref": "#/components/schemas/SearchResultItemSubtype"
                    },
                    "results": {
                        "type": "array",
                        "description": "list of results",
                        "items": {
                            "$ref": "#/components/schemas/searchResultItem"
                        }
                    }
                }
            },
            "GetChangeCount_ByProjection_RequestBody": {
                "type": "object",
                "properties": {
                    "projectionType": {
                        "type": "array",
                        "description": "A list of project types. Allowed values are type, source",
                        "items": {
                            "type": "string",
                            "enum": [
                                "type",
                                "source"
                            ]
                        }
                    },
                    "changeCountRequest": {
                        "type": "object",
                        "properties": {
                            "services": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/GetServiceChangeCount_RequestBody_services"
                                }
                            },
                            "includeLocationIds": {
                                "type": "array",
                                "description": "A list of location IDS to include when searching for changes.",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "excludeLocationIds": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "excludeChangeTypes": {
                                "type": "array",
                                "description": "A list of change types to exlucde when searching for changes.",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "excludeChangeSources": {
                                "type": "array",
                                "description": "A list of change sources to exlucde when searching for changes.",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "startTime": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "endTime": {
                                "type": "string",
                                "format": "date-time"
                            }
                        }
                    }
                }
            },
            "GetServiceChangeCount_RequestBody_services": {
                "type": "object",
                "properties": {
                    "serviceName": {
                        "type": "string"
                    },
                    "serviceId": {
                        "type": "string"
                    },
                    "componentNames": {
                        "type": "array",
                        "description": "A list of component names to include when searching for changes. Defaults to all if not specified.",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "example": null
            },
            "GetChangeCount_ByProjection_ResponseBody": {
                "type": "object",
                "properties": {
                    "changeSourceCount": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ChangeSourceCountModel"
                        }
                    },
                    "changeTypeCount": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ChangeTypeCountModel"
                        }
                    }
                }
            },
            "searchResultItem": {
                "required": [
                    "id",
                    "name",
                    "type",
                    "subType"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "1234-5678-9091"
                    },
                    "name": {
                        "type": "string",
                        "example": "service"
                    },
                    "type": {
                        "$ref": "#/components/schemas/SearchResultItemType"
                    },
                    "subType": {
                        "$ref": "#/components/schemas/SearchResultItemSubtype"
                    },
                    "parentId": {
                        "type": "string",
                        "example": "2341-7568-1202"
                    },
                    "details": {
                        "type": "string",
                        "description": "Org Hierarchy will be populated for Service, For location this field will not be populated",
                        "example": "org/serv/devision"
                    }
                }
            },
            "SearchResultItemSubtype": {
                "type": "string",
                "enum": [
                    "availabilityzone",
                    "service",
                    "component",
                    "cluster",
                    "region",
                    "aggrouter",
                    "aggswitch",
                    "backendclusterspine",
                    "backendtorrouter",
                    "borderleaf",
                    "clusterspine",
                    "corerouter",
                    "coret",
                    "corporateaggregaterouter",
                    "datacenter",
                    "dcspine",
                    "farm",
                    "internetbackbonerouter",
                    "internetcorerouter",
                    "internetedgerouter",
                    "internetroutereflector",
                    "loadbalancer",
                    "minit",
                    "regionalaggregator",
                    "regionalhub",
                    "regionalshim",
                    "storagetenant",
                    "swanrouter",
                    "torrouter",
                    "wanrouter",
                    "zone",
                    "changeSystem",
                    "changeType",
                    "timeRange",
                    "unknown"
                ]
            },
            "SearchResultItemType": {
                "type": "string",
                "enum": [
                    "locationHierarchy",
                    "serviceHierarchy",
                    "dependentServiceHierarchy",
                    "changeType",
                    "changeSystem",
                    "timeRange"
                ]
            },
            "GetParametersByIncidentId_ResponseBody": {
                "type": "object",
                "required": [
                    "incidentId",
                    "incidentTitle",
                    "parameters"
                ],
                "properties": {
                    "incidentId": {
                        "description": "Unique identifier of the incident.",
                        "type": "string"
                    },
                    "incidentTitle": {
                        "type": "string",
                        "description": "Title of the incident."
                    },
                    "parameters": {
                        "type": "array",
                        "description": "Field containing the time range, location and service parameters for the given IncidentId.",
                        "items": {
                            "$ref": "#/components/schemas/Parameters"
                        }
                    }
                }
            },
            "Parameters": {
                "description": "Contains the time range, location and service parameters for a given IncidentId.",
                "type": "object",
                "required": [
                    "startTime",
                    "endTime",
                    "includeLocationIds",
                    "services"
                ],
                "properties": {
                    "startTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "includeLocationIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "services": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "serviceTreeGuid": {
                                    "type": "string"
                                },
                                "components": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "GetChangeCount_RequestBody": {
                "type": "object",
                "properties": {
                    "services": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "serviceName": {
                                    "type": "string"
                                },
                                "serviceId": {
                                    "type": "string"
                                },
                                "componentNames": {
                                    "description": "A list of component names to include when searching for changes. Defaults to all if not specified.",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "includeLocationIds": {
                        "description": "A list of location IDS to include when searching for changes.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "excludeLocationIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "excludeChangeTypes": {
                        "description": "A list of change types to exlucde when searching for changes.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "excludeChangeSources": {
                        "description": "A list of change sources to exlucde when searching for changes.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "startTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "locationSelectOnly": {
                      "type": "boolean",
                      "default": false
                    }

                },
                "required": [
                    "services",
                    "startTime",
                    "endTime"
                ]
            },
            "GetChangeCount_ResponseBody": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/ChangeCountModel"
                }
            },
            "ChangeCountModel": {
                "type": "object",
                "properties": {
                    "serviceId": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "changeCount": {
                        "description": "Count of top-most parent changes for a given service.",
                        "type": "integer"
                    }
                }
            },
            "GetChangeSourceCount_ResponseBody": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/ChangeSourceCountModel"
                }
            },
            "ChangeTypeCountModel": {
                "type": "object",
                "properties": {
                    "changeType": {
                        "type": "string"
                    },
                    "changeCount": {
                        "description": "Count of top-most parent changes by ChangeType.",
                        "type": "integer"
                    }
                }
            },
            "GetChangeTypeCount_ResponseBody": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/ChangeTypeCountModel"
                }
            },
            "ChangeSourceCountModel": {
                "type": "object",
                "properties": {
                    "changeSource": {
                        "type": "string"
                    },
                    "changeCount": {
                        "description": "Count of top-most parent changes by ChangeSource.",
                        "type": "integer"
                    }
                }
            },
            "RankingModel": {
                "type": "object",
                "properties": {
                    "time": {
                        "type": "string",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "completed",
                            "in progress",
                            "failed"
                        ]
                    }
                },
                "minProperties": 1,
                "additionalProperties": false
            },
            "GetChangeCountDetails_RequestBody": {
                "type": "object",
                "properties": {
                    "ranking": {
                        "type": "object",
                        "$ref": "#/components/schemas/RankingModel"
                    },
                    "componentNames": {
                        "description": "A list of component names to include when searching for changes. Defaults to all if not specified.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "includeLocationIds": {
                        "description": "A list of location IDS to include when searching for changes.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "excludeLocationIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "excludeChangeTypes": {
                        "description": "A list of change types to exlucde when searching for changes.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "excludeChangeSources": {
                        "description": "A list of change sources to exlucde when searching for changes.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "limit": {
                        "type": "integer",
                        "description": "Limit of pagination size."
                    },
                    "offset": {
                        "type": "integer",
                        "description": "Set of next items to retrieve from pagination."
                    },
                    "startTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "locationSelectOnly": {
                      "type": "boolean",
                      "default": false
                    }
                },
                "required": [
                    "startTime",
                    "endTime"
                ]
            },
            "GetChangeCountDetails_ResponseBody": {
                "type": "object",
                "required": [
                    "serviceId",
                    "serviceName"
                ],
                "properties": {
                    "serviceId": {
                        "description": "Unique identifier of the service from ServiceTree.",
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "groupedChanges": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ChangeObject"
                        }
                    }
                }
            },
            "GetChanges_RequestBody": {
                "type": "object",
                "properties": {
                    "ranking": {
                        "type": "object",
                        "$ref": "#/components/schemas/RankingModel"
                    },
                    "componentNames": {
                        "description": "A list of component names to include when searching for changes. Defaults to all if not specified.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "includeLocationIds": {
                        "description": "A list of location IDS to include when searching for changes.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "excludeLocationIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "excludeChangeTypes": {
                        "description": "A list of change types to exlucde when searching for changes.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "excludeChangeSources": {
                        "description": "A list of change sources to exlucde when searching for changes.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "changeSource": {
                        "description": "The `changeSource` type of the change.",
                        "type": "string"
                    },
                    "limit": {
                        "type": "integer",
                        "description": "Limit of pagination size."
                    },
                    "offset": {
                        "type": "integer",
                        "description": "Set of next items to retrieve from pagination."
                    },
                    "startTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endTime": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "required": [
                    "startTime",
                    "endTime",
                    "changeSource"
                ]
            },
            "GetChanges_ResponseBody": {
                "type": "object",
                "properties": {
                    "parentChange": {
                        "$ref": "#/components/schemas/ChangeObject"
                    },
                    "childChanges": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ChangeObject"
                        }
                    }
                }
            },
            "BadRequestError": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "example": "BadRequestError"
                    },
                    "message": {
                        "type": "string",
                        "example": "Bad request error. Reason: <detail>."
                    }
                }
            },
            "InternalServerError": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "example": "InternalServerError"
                    },
                    "message": {
                        "type": "string",
                        "example": "Internal server error. Reason: <detail>."
                    }
                }
            },
            "ChangeObject": {
                "description": "Change object; models the Kusto DB entry.",
                "type": "object",
                "required": [
                    "eventId",
                    "changeTitle",
                    "changeDescription",
                    "sourceSystem",
                    "changeId",
                    "parentChangeId",
                    "parentSourceSystem",
                    "serviceId",
                    "component",
                    "payloadId",
                    "locationId",
                    "deploymentTarget",
                    "deploymentTargetType",
                    "changeType",
                    "changeState",
                    "startTime",
                    "endTime",
                    "changeOwner",
                    "serviceName",
                    "genevaActionsCount",
                    "externalSourceUri"
                ],
                "properties": {
                    "eventId": {
                        "type": "string"
                    },
                    "changeTitle": {
                        "type": "string"
                    },
                    "changeDescription": {
                        "type": "string"
                    },
                    "sourceSystem": {
                        "type": "string"
                    },
                    "changeId": {
                        "type": "string"
                    },
                    "parentChangeId": {
                        "type": "string"
                    },
                    "parentSourceSystem": {
                        "type": "string"
                    },
                    "serviceId": {
                        "type": "string"
                    },
                    "component": {
                        "type": "string"
                    },
                    "payloadId": {
                        "type": "string"
                    },
                    "locationId": {
                        "type": "string"
                    },
                    "deploymentTarget": {
                        "type": "string"
                    },
                    "deploymentTargetType": {
                        "type": "string"
                    },
                    "changeType": {
                        "type": "string"
                    },
                    "changeState": {
                        "type": "string"
                    },
                    "startTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "changeOwner": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "genevaActionsCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "externalSourceUri": {
                        "type": "string"
                    }
                }
            },
            "GetServiceGroupedChangesByIncidentId_ResponseBody": {
                "type": "object",
                "required": [
                    "serviceId",
                    "serviceName"
                ],
                "properties": {
                    "serviceId": {
                        "description": "Unique identifier of the service (ServiceTreeGuid).",
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Common name of the service."
                    },
                    "serviceGroupedChanges": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ChangeObject"
                        }
                    }
                }
            },
            "ChangeEvent": {
                "description": "Object that models an FCM ChangeEvent.",
                "type": "object",
                "required": [
                    "eventId",
                    "changeTitle",
                    "changeDescription",
                    "sourceSystem",
                    "changeId",
                    "parentChangeId",
                    "parentSourceSystem",
                    "serviceId",
                    "component",
                    "payloadId",
                    "locationId",
                    "deploymentTarget",
                    "deploymentTargetType",
                    "changeType",
                    "changeState",
                    "startTime",
                    "endTime",
                    "changeOwner",
                    "serviceName",
                    "genevaActionsCount",
                    "externalSourceUri"
                ],
                "properties": {
                    "eventId": {
                        "type": "string"
                    },
                    "changeTitle": {
                        "type": "string"
                    },
                    "changeDescription": {
                        "type": "string"
                    },
                    "sourceSystem": {
                        "type": "string"
                    },
                    "changeId": {
                        "type": "string"
                    },
                    "parentChangeId": {
                        "type": "string"
                    },
                    "parentSourceSystem": {
                        "type": "string"
                    },
                    "serviceId": {
                        "type": "string"
                    },
                    "component": {
                        "type": "string"
                    },
                    "payloadId": {
                        "type": "string"
                    },
                    "locationId": {
                        "type": "string"
                    },
                    "deploymentTarget": {
                        "type": "string"
                    },
                    "deploymentTargetType": {
                        "type": "string"
                    },
                    "changeType": {
                        "type": "string"
                    },
                    "changeState": {
                        "type": "string"
                    },
                    "startTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "changeOwner": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "genevaActionsCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "externalSourceUri": {
                        "type": "string"
                    }
                }
            },
            "NoContentResult": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    }
                }
            },
            "component": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "component_id"
                    },
                    "name": {
                        "type": "string",
                        "example": "component_name"
                    },
                    "description": {
                        "type": "string",
                        "example": "component_description"
                    },
                    "type": {
                        "type": "string",
                        "example": "component_type"
                    }
                }
            },
            "service": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "service_guid"
                    },
                    "name": {
                        "type": "string",
                        "example": "service_name"
                    },
                    "description": {
                        "type": "string",
                        "example": "service_description"
                    },
                    "shortName": {
                        "type": "string",
                        "example": "service_shortname"
                    },
                    "serviceGroup": {
                        "type": "string",
                        "example": "service_group"
                    },
                    "organization": {
                        "type": "string",
                        "example": "organization_name"
                    },
                    "division": {
                        "type": "string",
                        "example": "division_name"
                    },
                    "teamGroup": {
                        "type": "string",
                        "example": "teamgroup_name"
                    },
                    "type": {
                        "type": "string",
                        "example": "service_type"
                    },
                    "organizationPath": {
                        "type": "string",
                        "example": "division\\organization\\servicegroup\\teamgroup"
                    },
                    "components": {
                        "type": "array",
                        "description": "list of components associated with service",
                        "items": {
                            "$ref": "#/components/schemas/component"
                        }
                    }
                }
            },
            "serviceDetails": {
                "type": "object",
                "properties": {
                    "service": {
                        "$ref": "#/components/schemas/service"
                    },
                    "dependentServices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/service"
                        }
                    }
                }
            },
            "SearchLocationsResponse": {
                "type": "object",
                "description": "API response of /v1/locations/search/",
                "properties": {
                    "locations": {
                        "type": "array",
                        "description": "List of locations containing the provided keyword",
                        "items": {
                            "$ref": "#/components/schemas/LocationNode"
                        }
                    }
                }
            },
            "GetLocationDetailsResponse": {
                "type": "object",
                "description": "API response of /v1/locations/{id}",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/LocationNode"
                    },
                    {
                        "properties": {
                            "parentHierarchy": {
                                "type": "array",
                                "description": "List of all parent locations from immediate parent to the root parent in the network topology",
                                "items": {
                                    "$ref": "#/components/schemas/LocationHierarchyNode",
                                    "maxItems": 20
                                }
                            },
                            "children": {
                                "type": "array",
                                "description": "List of immediate child locations of this node in the network topology",
                                "items": {
                                    "$ref": "#/components/schemas/LocationNode",
                                    "maxItems": 50
                                }
                            },
                            "numberOfDirectChildren": {
                                "type": "integer",
                                "description": "Attribute representing total number of immediate child locations for the provided location in the network topology",
                                "example": "250"
                            }
                        }
                    }
                ]
            },
            "LocationNode": {
                "type": "object",
                "description": "This entity represents the key information about the node",
                "properties": {
                    "locationId": {
                        "type": "string",
                        "description": "Unique id to represent the location in the network topology",
                        "example": "usEast0111"
                    },
                    "locationName": {
                        "type": "string",
                        "description": "Human readable friendly name assigned to this location",
                        "example": "US East"
                    },
                    "locationType": {
                        "type": "string",
                        "enum": [
                            "region",
                            "dataCenter",
                            "cluster"
                        ],
                        "description": "Represents the kind/type of location in the network topology",
                        "example": "region"
                    }
                },
                "required": [
                    "locationId",
                    "locationName",
                    "locationType"
                ]
            },
            "LocationHierarchyNode": {
                "type": "object",
                "description": "This entity represents the hierarchy with respect to the asked node in the network topology",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/LocationNode"
                    },
                    {
                        "properties": {
                            "children": {
                                "type": "array",
                                "description": "This will represent child location of the root node all the way to the asked location node. This will provide hierarchy tree from the topmost node to the inquired node.",
                                "items": {
                                    "$ref": "#/components/schemas/LocationHierarchyNode",
                                    "maxItems": 1
                                }
                            }
                        }
                    }
                ]
            },
            "LocationInformationProviderServiceError": {
                "type": "object",
                "description": "Base error for all errors thrown by LIPS (Location Information Provider Service)",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "enum": [
                            "LocationIdFormatInvalid",
                            "RetryableError"
                        ],
                        "description": "Error code to allow clients to react and run custom business logic depending on the code provided"
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Error message explaining the details of the error to help client take action/debug"
                    }
                },
                "required": [
                    "errorCode",
                    "errorMessage"
                ]
            }
        }
    }
}